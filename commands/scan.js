import fs from 'fs';
import Jetty from 'jetty';

import getDrive from '../getDrive';
import Scanner from '../classes/scanner';

/**
 * @typedef Args {Object}
 * @property output {String}
 */

// Max size that Google Drive will scan for viruses
// (Currently seems to be 100M)
const MAX_SCANNABLE_SIZE = 100000000;

/**
 * @param {Args} args 
 */
export default async function scan(args) {
  const jetty = new Jetty(process.stdout);

  /** @type ProgressCallback */
  const onProgress = (progress, descriptor) => {
    jetty.clear();
    jetty.moveTo(0, 0);
    jetty.text(`Discovered: ${progress.discovered} (${progress.pages} pages)\n`);
    jetty.text(`Processing: ${progress.processing}\n`);
    jetty.text(`Skipped: ${progress.skipped}\n`);
    jetty.text(`Checked: ${progress.checked}\n`);
    
    jetty.text('\n' + descriptor + '\n');
    
    jetty.text(`\nIssues: ${progress.errored.length}\n`);
    for(const r of progress.errored) {
      jetty.text(`${r.file.name}: ${r.errors.map(e => e.reason).join(', ')} ${r.file.webViewLink}\n`);
    }
  };

  const scanner = new Scanner(getDrive(), MAX_SCANNABLE_SIZE);

  const results = await scanner.scanDrive(onProgress);

  if(args.output) {
    fs.writeFileSync(args.output, JSON.stringify(results, null, '  '));
    console.log(`Detailed results saved to ${args.output}.`);
  }
}
